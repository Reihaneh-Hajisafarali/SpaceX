# -*- coding: utf-8 -*-
"""Exploratory Analysis using SQL-reyhan.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1C8OLY00SLzMmduYKOwYMSnPY2FEHTMn2

# Assignment: SQL Notebook for Peer Assignment
Estimated time needed: 60 minutes.

Introduction
Using this Python notebook you will:

Understand the Spacex DataSet
Load the dataset into the corresponding table in a Db2 database
Execute SQL queries to answer assignment questions
Overview of the DataSet
SpaceX has gained worldwide attention for a series of historic milestones.

It is the only private company ever to return a spacecraft from low-earth orbit, which it first accomplished in December 2010. SpaceX advertises Falcon 9 rocket launches on its website with a cost of 62 million dollars wheras other providers cost upward of 165 million dollars each, much of the savings is because Space X can reuse the first stage.

Therefore if we can determine if the first stage will land, we can determine the cost of a launch.

This information can be used if an alternate company wants to bid against SpaceX for a rocket launch.

This dataset includes a record for each payload carried during a SpaceX mission into outer space.
#REYAN

Download the datasets
This assignment requires you to load the spacex dataset.

In many cases the dataset to be analyzed is available as a .CSV (comma separated values) file, perhaps on the internet. Click on the link below to download and save the dataset (.CSV file):

![Spacex.csv](data:text/csv;base64,)
"""

!pip install sqlalchemy==1.3.9

"""Connect to the database
Let us first load the SQL extension and establish a connection with the database
"""

#Please uncomment and execute the code below if you are working locally.
!pip install ipython-sql

# Commented out IPython magic to ensure Python compatibility.
# %load_ext sql

import csv, sqlite3
con = sqlite3.connect("my_data1.db")
cur = con.cursor()

!pip install -q pandas

# Commented out IPython magic to ensure Python compatibility.
# %sql sqlite:///my_data1.db

import pandas as pd
df = pd.read_csv("https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBM-DS0321EN-SkillsNetwork/labs/module_2/data/Spacex.csv")
df.to_sql("SPACEXTBL", con, if_exists='replace', index=False,method="multi")

"""Note:This below code is added to remove blank rows from table"""

# Commented out IPython magic to ensure Python compatibility.
# %sql create table SPACEXTABLE as select * from SPACEXTBL where Date is not null

"""# Tasks
Now write and execute SQL queries to solve the assignment tasks.

Note: If the column names are in mixed case enclose it in double quotes For Example "Landing_Outcome"

# Task 1
Display the names of the unique launch sites in the space mission
"""

# Commented out IPython magic to ensure Python compatibility.
# %sql select distinct Launch_site from SPACEXTBL

"""# Task 2
Display 5 records where launch sites begin with the string 'CCA'
"""

# Commented out IPython magic to ensure Python compatibility.
# %sql select * from SPACEXTBL where Launch_site like 'CCA%' limit 5

"""# Task 3
Display the total payload mass carried by boosters launched by NASA (CRS)
"""

# Commented out IPython magic to ensure Python compatibility.
# %sql SELECT SUM(PAYLOAD_MASS__KG_) || ' kg' AS Total_Payload_Mass FROM SPACEXTBL WHERE Customer = 'NASA (CRS)';

"""# Task 4
Display average payload mass carried by booster version F9 v1.1
"""

# Commented out IPython magic to ensure Python compatibility.
# %sql select avg(PAYLOAD_MASS__KG_)  || ' kg'as Average_Payload_Mass from SPACEXTBL where Booster_Version like 'F9 v1.1'

"""# Task 5
List the date when the first succesful landing outcome in ground pad was acheived.
Hint:Use min function
"""

# Commented out IPython magic to ensure Python compatibility.
# %sql select min(Date) as First_Successful_Landing_Date from SPACEXTBL where Landing_Outcome = 'Success (ground pad)'

"""# Task 6
List the names of the boosters which have success in drone ship and have payload mass greater than 4000 but less than 6000
"""

# Commented out IPython magic to ensure Python compatibility.
# %sql select Booster_Version,PAYLOAD_MASS__KG_ , 'Success (drone ship)' from SPACEXTBL where Landing_Outcome = 'Success (drone ship)' and PAYLOAD_MASS__KG_ between 4000 and 6000

"""# Task 7
List the total number of successful and failure mission outcomes
"""

# Commented out IPython magic to ensure Python compatibility.
# %sql SELECT Count(Mission_Outcome) as The_Number_Of_Mission_Outcomes, Mission_Outcome from SPACEXTBL group by Mission_Outcome order by Mission_Outcome

"""# Task 8
List the names of the booster_versions which have carried the maximum payload mass. Use a subquery
"""

# Commented out IPython magic to ensure Python compatibility.
# %sql select Booster_Version, PAYLOAD_MASS__KG_ from SPACEXTBL where PAYLOAD_MASS__KG_ like (select MAX(PAYLOAD_MASS__KG_) from SPACEXTBL) ORDER BY booster_version;

"""# Task 9
List the records which will display the month names, failure landing_outcomes in drone ship ,booster versions, launch_site for the months in year 2015.
Note: SQLLite does not support monthnames. So you need to use substr(Date, 6,2) as month to get the months and substr(Date,0,5)='2015' for year.
"""

# Commented out IPython magic to ensure Python compatibility.
# %%sql
# SELECT
#     CASE SUBSTR(Date, 6, 2)
#         WHEN '01' THEN 'January'
#         WHEN '02' THEN 'February'
#         WHEN '03' THEN 'March'
#         WHEN '04' THEN 'April'
#         WHEN '05' THEN 'May'
#         WHEN '06' THEN 'June'
#         WHEN '07' THEN 'July'
#         WHEN '08' THEN 'August'
#         WHEN '09' THEN 'September'
#         WHEN '10' THEN 'October'
#         WHEN '11' THEN 'November'
#         WHEN '12' THEN 'December'
#     END AS Month,
#     Landing_Outcome,
#     Booster_Version,
#     Launch_Site
# FROM
#     SPACEXTBL
# WHERE
#     Landing_Outcome = 'Failure (drone ship)'
#     AND SUBSTR(Date,0,5) = '2015';

"""# Task 10
Rank the count of landing outcomes (such as Failure (drone ship) or Success (ground pad)) between the date 2010-06-04 and 2017-03-20, in descending order.
"""

# Commented out IPython magic to ensure Python compatibility.
# %sql SELECT Landing_Outcome, COUNT(landing_outcome) AS Count, DATE FROM SPACEXTBL WHERE Date BETWEEN '2010-06-04' AND '2017-03-20' GROUP BY Landing_Outcome ORDER BY Count DESC;